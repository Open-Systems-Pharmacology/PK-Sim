configuration: Debug
image: Visual Studio 2022

version: '12.1.{build}'

environment:
  TARGET_FRAMEWORK: net8

init:
- cmd: if DEFINED APPVEYOR_PULL_REQUEST_NUMBER (Set patch_version=12.1.1) ELSE (Set patch_version=%APPVEYOR_BUILD_VERSION%)
- ps: |
      $lastCommitDate = git log -1 --format=%ci
      $currentDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
      $timeDiff = New-TimeSpan -Start $lastCommitDate -End $currentDate
      if ($timeDiff.TotalHours -lt 24) {
        Write-Host "Changes detected in the last 24 hours. Proceeding with the build."
      }
      else {
        Write-Host "No changes in the last 24 hours. Skipping the build."
        Exit-AppVeyorBuild
      }

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '$(patch_version)'
  assembly_version: '$(patch_version)'
  file_version: '$(patch_version)'
  informational_version: '$(patch_version)'


clone_depth: 1
  
install:
  - set PATH=C:\Ruby25\bin;%PATH%
  - gem install xml-simple

before_build:
  - nuget sources add -name bddhelper -source https://ci.appveyor.com/nuget/ospsuite-bddhelper
  - nuget sources add -name utility -source https://ci.appveyor.com/nuget/ospsuite-utility
  - nuget sources add -name serializer -source https://ci.appveyor.com/nuget/ospsuite-serializer
  - nuget sources add -name texreporting -source https://ci.appveyor.com/nuget/ospsuite-texreporting
  - nuget sources add -name databinding -source https://ci.appveyor.com/nuget/ospsuite-databinding
  - nuget sources add -name databinding-devexpress -source https://ci.appveyor.com/nuget/ospsuite-databinding-devexpress
  - nuget sources add -name funcparser -source https://ci.appveyor.com/nuget/ospsuite-funcparser
  - nuget sources add -name simmodel -source https://ci.appveyor.com/nuget/ospsuite-simmodel
  - nuget sources add -name cvodes -source https://ci.appveyor.com/nuget/ospsuite-simmodel-solver-cvodes
  - nuget sources add -name core -source https://ci.appveyor.com/nuget/ospsuite-core
  - nuget restore
  - rake "update_go_license[ApplicationStartup.cs, %GO_DIAGRAM_KEY%]"

after_build:
  - rake "create_setup[%APPVEYOR_BUILD_VERSION%, %CONFIGURATION%]"
  - 7z a setup.zip %APPVEYOR_BUILD_FOLDER%\setup\deploy\*.msi
  - rake "create_portable_setup[%APPVEYOR_BUILD_VERSION%, %CONFIGURATION%, pk-sim-portable-setup.zip]"
  - cmd: >
      pushd . &&
      cd src\PKSimRDependencyResolution\bin\%CONFIGURATION%\%TARGET_FRAMEWORK% &&
      "C:\Program Files\7-Zip\7z.exe" a pk-sim-r-dependencies.zip -x@excludedFiles.txt * -xr!runtimes &&
      popd

build:
  verbosity: minimal
  project: PKSim.sln


on_finish:
  - ps: Get-ChildItem setup.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
  - ps: Get-ChildItem .\setup\*.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
  - ps: |
      $artifactPath = Join-Path $env:APPVEYOR_BUILD_FOLDER "src\PKSimRDependencyResolution\bin\$env:CONFIGURATION\$env:TARGET_FRAMEWORK\pk-sim-r-dependencies.zip"
      Write-Host "Checking for artifact at: $artifactPath"
      if (Test-Path $artifactPath) {
        Write-Host "Artifact found. Pushing to AppVeyor."
        Push-AppveyorArtifact -Path $artifactPath
      } else {
        Write-Error "Artifact path not found: $artifactPath"
      }

test:
  assemblies:
    - PKSim.Tests.dll
    - PKSim.UI.Tests.dll
    - PKSim.Matlab.Tests.dll
